# Snakefile

rule all:
    input:
        expand(config["workdir"] + "Haplotype_Assemblies/busco/{id}/short_summary.specific.embryophyta_odb10.{id}.txt",
               id=list(config["samples"].keys())),
        expand(config["workdir"] + "Haplotype_Assemblies/summaries/assembly_summary_{id}.txt",
               id=list(config["samples"].keys()))
        
rule busco:
    input:
        assembly = lambda wildcards: config["samples"][wildcards.id]["file"]
    output:
        summary = config["workdir"] + "Haplotype_Assemblies/busco/{id}/short_summary.specific.embryophyta_odb10.{id}.txt"
    threads: 16
    resources:
        mem_mb=70000  # 70GB in MB
    params:
        outdir = config["workdir"] + "Haplotype_Assemblies/busco/{id}",
        label = "{id}"
    shell:
        """
        module load busco5
        echo "~~~~ Starting BUSCO Analysis for {wildcards.id} ~~~~"
        mkdir -p {params.outdir}
        cd {params.outdir}
        
        busco -i {input.assembly} \
            -l embryophyta_odb10 \
            -m genome \
            -c {threads} \
            -o {params.label} \
            -f
            
        mv {params.label}/short_summary.specific.embryophyta_odb10.{params.label}.txt .
        echo "~~~~ BUSCO Analysis Complete ~~~~"

        rm -rf busco_downloads/ {wildcards.id}/
        """

rule summarize_assembly:
    input:
        chr_list = config["workdir"] + "Haplotype_Assemblies/Chromosomes.list",
        final_assembly = lambda wildcards: config["samples"][wildcards.id]["file"],
        busco = config["workdir"] + "Haplotype_Assemblies/busco/{id}/short_summary.specific.embryophyta_odb10.{id}.txt",
        first_purge = lambda wildcards: config["workdir"] + f"{config['samples'][wildcards.id]['sample']}/HiCHiFi/02_PurgeDups/hap{config['samples'][wildcards.id]['hap']}/purged.fa",
        second_purge = lambda wildcards: config["workdir"] + f"{config['samples'][wildcards.id]['sample']}/HiCHiFi/04_PurgeDups/hap{config['samples'][wildcards.id]['hap']}/purged.fa"
    output:
        summary = config["workdir"] + "Haplotype_Assemblies/summaries/assembly_summary_{id}.txt",
        chr_fasta = config["workdir"] + "Haplotype_Assemblies/chromosomal/{id}.chr.fa"
    params:
        sample = lambda wildcards: config["samples"][wildcards.id]["sample"],
        hap = lambda wildcards: config["samples"][wildcards.id]["hap"]
    singularity: config["container"]
    shell:
        """
        # Get metrics for final assembly
        FINAL_STATS=$(assembly_stats {input.final_assembly})
        SIZE=$(echo "$FINAL_STATS" | tr ':' '\n' | grep -A 1 'total_bps' | tail -n1 | sed 's/,//g')
        SEQS=$(echo "$FINAL_STATS" | tr ':' '\n' | grep -A 1 'sequence' | tail -n1 | sed 's/,//g')
        CTGS=$(echo "$FINAL_STATS" | tr ':' '\n' | grep -A 1 'sequence' | head -n2 | tail -n1 | sed 's/,//g')
        SCAF_N50=$(echo "$FINAL_STATS" | tr ':' '\n' | grep -A 1 'N50' | tail -n1 | sed 's/,//g')
        CONT_N50=$(echo "$FINAL_STATS" | tr ':' '\n' | grep -A 1 'N50' | head -n2 | tail -n1 | sed 's/,//g')
        GAPS=$((CTGS - SEQS))
        
        # Parse BUSCO results
        BUSCO_COMPLETE=$(grep "C:" {input.busco} | cut -d'[' -f1 | cut -d':' -f2 | cut -d'%' -f1)
        BUSCO_SINGLE=$(grep "C:" {input.busco} | cut -d'[' -f2 | cut -d'%' -f1 | sed 's/S://g')

        # What percentage of the assembly is in chrs1-28? 
        samtools faidx {input.final_assembly}
        grep 'chr' {input.final_assembly}.fai | cut -f1 > {input.final_assembly}.chrs
        samtools faidx {input.final_assembly} -r {input.final_assembly}.chrs > {output.chr_fasta}
        CHR_STATS=$(assembly_stats {output.chr_fasta})
        CHR_SIZE=$(echo "$CHR_STATS" | tr ':' '\n' | grep -A 1 'total_bps' | tail -n1 | sed 's/,//g')
        CHR_PROP=$(perl -e "print sprintf('%.4f', $CHR_SIZE / $SIZE)")
        NUM_CHRS=$(cat {input.final_assembly}.chrs | wc -l)
        
        # ScafN50, after first purge and after second purge
        FIRST_STATS=$(assembly_stats {input.first_purge})
        FIRST_N50=$(echo "$FIRST_STATS" | tr ':' '\n' | grep -A 1 'N50' | tail -n1 | sed 's/,//g')
        SECOND_STATS=$(assembly_stats {output.chr_fasta})
        SECOND_N50=$(echo "$SECOND_STATS" | tr ':' '\n' | grep -A 1 'N50' | tail -n1 | sed 's/,//g')
        
        # Write summary
        echo -e "ID\tSample\tHaplotype\tBUSCO_Complete\tBUSCO_singlecopy\tSizeBP\tWithinChrsBP\tPropWithinChrs\tChrs\tSequences\tContigs\tGaps\tContigN50\tScafN50\tScafN50_01\tScafN50_02" > {output.summary}
        echo -e "{wildcards.id}\t{params.sample}\t{params.hap}\t$BUSCO_COMPLETE\t$BUSCO_SINGLE\t$SIZE\t$CHR_SIZE\t$CHR_PROP\t$NUM_CHRS\t$SEQS\t$CTGS\t$GAPS\t$CONT_N50\t$SCAF_N50\t$FIRST_N50\t$SECOND_N50" >> {output.summary}
        """